version: "3.3"

networks:
    app:

services:
    server:
        image: golang
        container_name: server
        working_dir: /app/server
        environment:
            - NODE_ENV=${NODE_ENV}
            - SERVER_HOST=${SERVER_HOST}
            - SERVER_PORT=${SERVER_PORT}
            - SERVER_PROTOCOL=${SERVER_PROTOCOL}
        restart: unless-stopped
        expose:
            - ${SERVER_PORT}
        volumes:
            - ./server:/app/server
            - ./server/go.mod:/app/server/go.mod
        command: >
            sh -c "go mod download && go build -o bin/application && ./bin/application"
        networks:
            - app

    client:
        image: node
        container_name: client
        working_dir: /app/client
        environment:
            - NODE_ENV=${NODE_ENV}
            - REACT_APP_PORT=${CLIENT_PORT}
            - REACT_APP_SERVER_HOST=${SERVER_HOST}
            - REACT_APP_SERVER_PORT=${SERVER_PORT}
            - REACT_APP_SERVER_PROTOCOL=${SERVER_PROTOCOL}
        volumes:
            - ./client:/app/client
            - ./client/package.json:/app/client/package.json
            - ./client/package-lock.json:/app/client/package-lock.json
        command: >
            sh -c "npm install && npm run build"

    proxy:
        image: nginx
        container_name: proxy
        restart: always
        environment:
            - SERVER_PORT=${SERVER_PORT}
        volumes:
            - ./infrastructure/nginx/templates:/etc/nginx/templates
            - ./infrastructure/nginx/options-ssl-nginx.conf:/etc/nginx/conf.d/options-ssl-nginx.conf
        ports:
            - 80:80
            - 443:443
        networks:
            - app
