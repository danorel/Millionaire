version: "3.3"

networks:
    app:

services:
    server:
        image: golang
        container_name: server
        working_dir: /app/server
        environment:
            - NODE_ENV=${NODE_ENV}
            - SERVER_HOST=${SERVER_HOST}
            - SERVER_PORT=${SERVER_PORT}
            - SERVER_PROTOCOL=${SERVER_PROTOCOL}
        restart: unless-stopped
        expose:
            - ${SERVER_PORT}
        ports:
            - ${SERVER_PORT}:${SERVER_PORT}
        volumes:
            - ./server:/app/server
            - ./server/go.mod:/app/server/go.mod
        command: >
            sh -c "go get github.com/cespare/reflex && go mod download && reflex -r '(\.go$$|go\.mod)' -s go run ."
        networks:
            - app

    client:
        image: node
        container_name: client
        working_dir: /app/client
        environment:
            - NODE_ENV=${NODE_ENV}
            - CHOKIDAR_USEPOLLING=true
            - REACT_APP_PORT=${CLIENT_PORT}
            - REACT_APP_SERVER_HOST=${SERVER_HOST}
            - REACT_APP_SERVER_PORT=${SERVER_PORT}
            - REACT_APP_SERVER_PROTOCOL=${SERVER_PROTOCOL}
        restart: unless-stopped
        expose:
            - ${CLIENT_PORT}
        ports:
            - ${CLIENT_PORT}:${CLIENT_PORT}
        volumes:
            - ./client:/app/client
            - ./client/package.json:/app/client/package.json
            - ./client/package-lock.json:/app/client/package-lock.json
        command: >
            sh -c "npm install && npm run start"
        stdin_open: true
        networks:
            - app
